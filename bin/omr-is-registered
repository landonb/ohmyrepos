#!/bin/sh
# vim:tw=0:ts=2:sw=2:et:norl:ft=bash
# Author: Landon Bouma (landonb &#x40; retrosoft &#x2E; com)
# Project: https://github.com/landonb/ohmyrepos#ðŸ˜¤
# License: MIT

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

__USAGE__='
  path/to/omr-is-registered <dir>
'

# These environs are also effective, but rarely used.
OMR_VERBOSE=${OMR_VERBOSE:-false}
OMR_VERBOSE_SKIPPED=${OMR_VERBOSE_SKIPPED:-false}
OMR_VERBOSE_NOT_SKIPPED=${OMR_VERBOSE_NOT_SKIPPED:-false}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

TERM_WIDTH=0

# Remember that [ -t 1 ] is false when called in a $(subprocess).
stdout_isatty () {
  [ -t 1 ]
}

cache_termimal_width () {
  TERM_WIDTH=0

  if ! stdout_isatty; then
    return 0
  fi
  
  local terminal=/dev/pts/1

  TERM_WIDTH=$(stty -a <"${terminal}" | grep -Po '(?<=columns )\d+')
}

clear_line () {
  if ! stdout_isatty; then

    return 0
  fi

  if ${OMR_VERBOSE:-false}; then

    return 0
  fi

  printf "\r"

  if [ ${TERM_WIDTH} -gt 0 ]; then
    printf " %.0s" $(eval echo {1..${TERM_WIDTH}})
  fi

  printf "\r"
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

omr_is_registered () {
  local proj_path="${1:-$(pwd)}"

  local mr_repo_path=""

  local cmd_mr_repo_force

  # Use --force in case current directory is not registered, but parent is
  # registered but skipped.
  # GRIPE/2024-04-03: This is slow. `mr` startup is slow. 10m on 500 repos.
  if ! cmd_mr_repo_force="$( \
    mr -d "${proj_path}" -n --force run sh -c 'echo "${MR_REPO}"' 2>&1
  )"; then
    # E.g., OUTPUT:
    #   (0 secs.) mr run: no repositories found to work on
    # Or perhaps:
    #   (0 secs.) mr run: FAILED: Cannot run action from subdir when -n/--no-recurse
    if echo "${cmd_mr_repo_force}" \
      | grep -q " mr run: no repositories found to work on$" \
    ; then
      >&2 echo "âœ— unregistered, parentless directory: ${proj_path}"

      return 1
    elif echo "${cmd_mr_repo_force}" \
      | grep -q "mr run: Cannot run action from subdir when -n/--no-recurse$" \
    ; then
      mr_repo_path="$( \
        echo "${cmd_mr_repo_force}" \
        | grep "Project root detected at:" \
        | sed 's/.*Project root detected at: //'
      )"
    else
      >&2 echo "GAFFE: \`mr --force run\` failed, but *for reasons unknown*"
      >&2 echo "  mr -d \"${proj_path}\" -n --force run sh -c 'echo \"\${MR_REPO}\"'"

      return 1
    fi
  fi

  # Remove second line, the timing/finished message:
  #   (0 secs.) mr run: finished (1 ok)
  if [ -z "${mr_repo_path}" ]; then
    mr_repo_path="$(echo "${cmd_mr_repo_force}" | head -n 1)"
  fi

  if [ -z "${mr_repo_path}" ]; then
    # Unreachable path.
    >&2 echo "âœ— unexpectedly, \`mr\` ok, but no output! mr_repo: ${proj_path}"

    return 1
  fi

  local omr_path_matches=false
  if _omr_realpath_cmp "${mr_repo_path}" "${proj_path}"; then
    omr_path_matches=true
  fi

  local cmd_mr_repo_normal
  cmd_mr_repo_normal="$(mr -d "${proj_path}" -n run sh -c 'echo "${MR_REPO}"' 2> /dev/null)"
  # Remove timing/finished message.
  cmd_mr_repo_normal="$(echo "${cmd_mr_repo_normal}" | head -1)"

  if echo "${cmd_mr_repo_normal}" | grep -q " mr run: finished (1 skipped)$"; then
    if ! "${omr_path_matches}"; then
      clear_line
      >&2 echo "âœ— unregistered, has a skipped parent: ${proj_path} (${mr_repo_path})"

      return 1
    fi

    if ${OMR_VERBOSE:-false} || ${OMR_VERBOSE_SKIPPED:-false}; then
      clear_line
      echo "âœ“ happily registered, but skiparooed: ${proj_path}"
    fi

    return 99
  fi

  if ! "${omr_path_matches}"; then
    clear_line
    >&2 echo "âœ— unregistered, but has known parent: ${proj_path} (${mr_repo_path})"

    return 1
  fi

  if ${OMR_VERBOSE:-false} || ${OMR_VERBOSE_NOT_SKIPPED:-false}; then
    clear_line
    echo "âœ“ yes, yes it is, happily registered: ${mr_repo_path}"
  fi

  return 0
}

_omr_realpath_cmp () {
  local lhs_path="$1"
  local rhs_path="$2"

  [ "$(realpath -- "${lhs_path}")" = "$(realpath -- "${rhs_path}")" ]
}

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

main () {
  set -e

  # Load: set_traps, clear_traps, exit_0, exit_1, os_is_macos.
  . "$(dirname -- "$(realpath -- "$0")")/../deps/sh-err-trap/lib/err-trap.sh"

  set_traps

  # ***

  local ret_code=0

  omr_is_registered "$@" \
    || ret_code=$?

  # ***

  clear_traps

  return ${ret_code}
}

PROG_NAME="${PROG_NAME:-omr-is-registered}"

# Run the command unless being sourced.
if [ "$(basename -- "$(realpath -- "$0")")" = "${PROG_NAME}" ]; then
  main "$@"
fi

